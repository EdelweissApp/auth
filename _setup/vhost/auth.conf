upstream phpfpm {
    # for PHP-FPM running on port
    server 127.0.0.1:9000;

    # for PHP-FPM running on UNIX socket
    #server unix:/var/run/php/php7.2-fpm.sock;
}

# www redirect to http://
server {
    listen 80;
    server_name www.auth.edelweiss.local;
    return 301 $scheme://auth.edelweiss.local$request_uri;

    error_log /var/log/nginx/www.auth.edelweiss.local_error.log;
    access_log /var/log/nginx/www.auth.edelweiss.local_access.log;
}

server {
    listen 80;
    #listen 443 ssl;
    server_name auth.edelweiss.local;
    root /var/www/auth/public;

    # include snippets/self-signed.conf;
    # include snippets/ssl-config.conf;

    location / {
        # try to serve file directly, fallback to app.php
        try_files $uri /index.php$is_args$args;
    }

    # {{{ PROD
    location ~ ^/index\.php(/|$) {
        fastcgi_pass phpfpm;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;

        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;

        #fastcgi_param CQ_ENV "${APP_ENV}";
        #fastcgi_param CQ_DEBUG "${APP_DEBUG}";

        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/app.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }
    # }}}

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
      return 404;
    }

    location ~ \.yml$ {
      return 404;
    }

    location = /favicon.ico {
      log_not_found off;
    }

    error_log /var/log/nginx/auth.edelweiss.local_error.log;
    access_log /var/log/nginx/auth.edelweiss.local_access.log;
}